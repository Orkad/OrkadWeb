version: "3"

services:
  db:
    image: mysql:latest
    container_name: "OrkadWeb.Mysql"
    restart: always
    ports:
      - "3306:3306"
    command: --default-authentication-plugin=mysql_native_password
    environment:
      MYSQL_DATABASE: orkadweb
      MYSQL_ROOT_PASSWORD: production

  rabbitmq:
    container_name: "OrkadWeb.RabbitMQ"
    image: masstransit/rabbitmq:latest
    ports:
      - "5672:5672"
      - "15672:15672"
    healthcheck:
      test: [ "CMD", "rabbitmqctl", "status" ]
      interval: 5s
      timeout: 10s
      retries: 10

  api:
    container_name: "OrkadWeb.Api"
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - 80:80
      - 443:443
    depends_on:
      - db
    env_file:
      - ../orkadweb.production.env
    environment:
      ASPNETCORE_ENVIRONMENT: production
      ASPNETCORE_URLS: https://+:443;http://+:80
      ASPNETCORE_HTTPS_PORT: 443
      ConnectionStrings:OrkadWeb: Server=db;Database=orkadweb;Uid=root;Pwd=production
      Kestrel:Certificates:Default:Path: /ssl/orkad.fr.pfx
    volumes:
      - "C:/Certbot/live/orkad.fr:/ssl"